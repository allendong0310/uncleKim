<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Uncle Kim</title>
  
  <subtitle>哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈</subtitle>
  <link href="/uncleKim/atom.xml" rel="self"/>
  
  <link href="http://uncle.kim/uncleKim/"/>
  <updated>2019-12-26T08:53:31.762Z</updated>
  <id>http://uncle.kim/uncleKim/</id>
  
  <author>
    <name>董大佩</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020 你好</title>
    <link href="http://uncle.kim/uncleKim/2019/12/20/about2020/"/>
    <id>http://uncle.kim/uncleKim/2019/12/20/about2020/</id>
    <published>2019-12-20T14:42:53.000Z</published>
    <updated>2019-12-26T08:53:31.762Z</updated>
    
    <content type="html"><![CDATA[<p>大家都觉得2019太难了，可能是我悲观吧，我觉得2020也不会好，但是还是想去一场李志的跨年。</p><a id="more"></a> <p>2019年就要过去了，今天下午茶的小橘子有点酸，办公室真的太压抑了，我在办公室拍的每张照片背景音都是键盘声，噼里啪啦响，很容易让我想起高考前的教室，写字翻书的声音，偶尔极低的说话声。除此以外，办公室最让我不适的还是不分白天夜晚惨白惨白的灯光。</p><p>这是在上海的第二年，说出来不怕笑话，其实我本来来上海是想实现个人梦想，做一个女强人，熬夜加班赚很多钱那种。结果事与愿违，刚来公司就暗戳戳谈起了办公室恋爱，弥补了我学生时代的遗憾，工位相邻的那段时间，感觉每天空气中都是粉色的泡泡。现在也不想做什么女强人了，梦想是早日住进自己的房子，赚点生活费，开开心心花掉，不要生病，每当这时候我都能很容易想起几年前跟我妈说我以后不买房子就租房子住的时候，确实没租过几年房，没在半夜搬过家的人不足以谈不买房子这件事。很奇怪，小时候总是理所应当的觉得自己会比父母过的好一点，会比他们厉害一点，后来长大一点，又觉得他们是过时的，认为自己比他们对世界的认知更准确，更能跟得上所谓的潮流。很嘲讽，总是忘记父母也年轻过，其实这只是时代的更替而已。</p><p>前两天跟一个hr聊天，说很多刚入行几年的年轻人总是说觉得自己成长太慢，经验不足，不够努力，并为此感到焦虑，结果他一翻绩效基本上都是还不错的，他说大家都太紧绷了，总觉得自己还不够好，其实这就是我们接受的教育啊。父母老师不是总说你要从自己身上找原因，为什么别人可以你就不行呢。我妈在我高考失利那年说她不希望我补习她会觉得我压力太大希望我可以轻轻松松的，虽然在我成长的过程中我妈也说过一些让我很伤心的话，但是这件事就能把这些都抚平。也不是否定努力的意义，而是觉得工作是为了生活，生活都没有了，努力的意义在哪。突然想起今年微博上那个崩溃大哭的程序员，看的时候我也想哭，有时候努力工作是为了体面的活着。最后hr问我如何调节工作中带来的负面情绪，我说我会告诉自己，工作是为了赚钱。我可能太实在。</p><p>2019年的总结里小王同学也是可以拥有姓名的，要不是小王同学，大概在19年来临之前我就已经逃回西安了吧，在这一点上，我觉得我妈应该是会对小王同学有所怨恨。今年的同居生活也还算顺利，虽然我有过几次大放厥词说要搬走的经历，但总得来说今年的恋爱也还是可圈可点的，虽然工作不太顺利（主要原因是工资没有涨到预期的目标）。我们（主要是老王）买的那个小房子的户型图翻来覆去看了好几遍，竟然有一次为了次次卧的装修问题认真的吵了一架，黑人问号。我想在主卧卫生间装一个浴缸，可是卫生间它真的太小，放不下我的梦想。我是个矫情鬼，但是我突然就不想说谢谢你了。</p><p>最近总是想起一位小时候的朋友，总觉得遗憾，我现在看到的她也应该看看呀</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大家都觉得2019太难了，可能是我悲观吧，我觉得2020也不会好，但是还是想去一场李志的跨年。&lt;/p&gt;
    
    </summary>
    
      <category term="summary" scheme="http://uncle.kim/uncleKim/categories/summary/"/>
    
    
      <category term="life" scheme="http://uncle.kim/uncleKim/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>一些常用的方法</title>
    <link href="http://uncle.kim/uncleKim/2019/10/22/function/"/>
    <id>http://uncle.kim/uncleKim/2019/10/22/function/</id>
    <published>2019-10-21T16:28:38.000Z</published>
    <updated>2019-12-26T08:53:36.890Z</updated>
    
    <content type="html"><![CDATA[<h2 id="限制输入框只显示整数"><a href="#限制输入框只显示整数" class="headerlink" title="限制输入框只显示整数"></a>限制输入框只显示整数</h2><p>尝试过很多的办法，最好用的正则的办法，虽然html5现在已经提供一些方法，但是在具体的项目中是远远不够的，判断的时候一般采取的办法<br>1.在失去焦点的时候判断。<br>2.在用户释放键盘按钮时执行，也就是 <code>onkeyup</code>。<br>3.在vue中放在@change事件中，交互不太友好，会在失去焦点的时候触发。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">'text'</span> onkeyup=<span class="string">"value=value.replace(/^(0+)|[^\d]+/g,'')"</span>&gt;</span><br></pre></td></tr></table></figure><p>留个坑：做一套表单验证系统，现在是在submit按钮上验证，没有文字交互，不够友好。<br>暂有方案：<br>1.点击按钮时弹框提示所有未通过验证表单<br>2.点击提交按钮时错误表单提示<br>3.每个表单失去焦点（or onkeyup）时提示</p><h2 id="一些常用命令"><a href="#一些常用命令" class="headerlink" title="一些常用命令"></a>一些常用命令</h2><p>git设置http免密<br><code>git config --global credential.helper store</code></p><p>清除git记住的密码<br><code>git config --system --unset credential.helper</code></p><p>Linux中su、su - 的区别</p><ul><li>su 切换到root用户，但是并没有转到root用户家目录下，即没有改变用户的环境。</li><li>su - 切换到root用户，并转到root用户的家目录下，即改变到了root用户的环境。</li></ul><p>添加删除远程仓库<br><code>git remote rm origin</code><br><code>git remote remove origin</code><br><code>git remote add origin &lt;originUrl&gt;</code><br>关联后，使用命令<code>git push -u origin maste</code>r第一次推送master分支的所有内容;<br><code>git remote rename &lt;oldName&gt; &lt;newName&gt;</code></p><p>git 子项目 init<br><code>git submodule update --remote projectName</code></p><p>解决npm install cache问题<br><code>npm cache verify</code></p><h2 id="一键粘贴"><a href="#一键粘贴" class="headerlink" title="一键粘贴"></a>一键粘贴</h2><p>使用document.execCommand方法</p><p>当一个HTML文档切换到设计模式时，document暴露 execCommand 方法，该方法允许运行命令来操纵可编辑内容区域的元素。</p><p><code>document.execCommand(aCommandName, aShowDefaultUI, aValueArgument)</code><br>aCommandName<br>    一个 DOMString ，命令的名称。<br>aShowDefaultUI<br>    一个 Boolean， 是否展示用户界面，一般为 false。Mozilla 没有实现。<br>aValueArgument<br>    一些命令（例如insertImage）需要额外的参数（insertImage需要提供插入image的url），默认为null。</p><p>copy 代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"oDiv"</span>&gt;1234567890&lt;/div&gt;</span><br><span class="line">&lt;textarea id=<span class="string">"contents"</span> rows=<span class="string">"10"</span> cols=<span class="string">"10"</span>&gt;&lt;/textarea&gt;</span><br><span class="line">&lt;button id=<span class="string">"btn"</span>&gt;点击&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">var btn = document.getElementById(<span class="string">"btn"</span>);</span><br><span class="line">btn.onclick = <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">copyText();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">copyText</span></span>()&#123; </span><br><span class="line">var e=document.getElementById(<span class="string">"contents"</span>);//获取textarea的id</span><br><span class="line">e.value = document.getElementById(<span class="string">"oDiv"</span>).innerText;//把标签的文本内容赋值给textarea</span><br><span class="line">e.select(); //选择textarea的文本内容</span><br><span class="line">document.execCommand(<span class="string">"Copy"</span>); //执行浏览器复制命令</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体的项目中可以隐藏 textarea</p><h2 id="下载功能"><a href="#下载功能" class="headerlink" title="下载功能"></a>下载功能</h2><p>通常情况下，下载都是直接用get请求。<br>但是在具体的项目中，有一个项目的认证是通过前端将约定好的cookies放在setRequestHeader里，直接get下载的时候会跳过认证。<br>所以写了原生的请求来解决这种情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">var exportForm = <span class="keyword">function</span>(url, name) &#123;</span><br><span class="line">var self = this;</span><br><span class="line">var xmlHTTP = new XMLHttpRequest();</span><br><span class="line">xmlHTTP.open(<span class="string">'GET'</span>, url, <span class="literal">true</span>);</span><br><span class="line">xmlHTTP.setRequestHeader(<span class="string">'Authorization'</span>, <span class="string">'aaa'</span>);</span><br><span class="line">xmlHTTP.responseType = <span class="string">'arraybuffer'</span>;</span><br><span class="line">xmlHTTP.onload = <span class="keyword">function</span>(e) &#123;</span><br><span class="line">var blob = new Blob([this.response]);</span><br><span class="line">var src = window.URL.createObjectURL(blob);</span><br><span class="line">var a = document.createElement(<span class="string">'a'</span>);</span><br><span class="line">var filename = name + <span class="string">'.csv'</span>;</span><br><span class="line">a.download = filename;</span><br><span class="line">a.href = src;</span><br><span class="line">$(<span class="string">'body'</span>).append(a);</span><br><span class="line">a.click();</span><br><span class="line">$(a).remove();</span><br><span class="line">&#125;;</span><br><span class="line">xmlHTTP.send();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>前端直接下载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> download(filename, text) &#123;</span><br><span class="line">var element = document.createElement(<span class="string">'a'</span>);</span><br><span class="line">element.setAttribute(<span class="string">'href'</span>, <span class="string">'data:text/plain;charset=utf-8,'</span> + encodeURIComponent(text));</span><br><span class="line">element.setAttribute(<span class="string">'download'</span>, filename);</span><br><span class="line"></span><br><span class="line">element.style.display = <span class="string">'none'</span>;</span><br><span class="line">document.body.appendChild(element);</span><br><span class="line"></span><br><span class="line">element.click();</span><br><span class="line"></span><br><span class="line">document.body.removeChild(element);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">download(<span class="string">"hello.txt"</span>,<span class="string">"This is the content of my file :)"</span>);</span><br></pre></td></tr></table></figure></p><h2 id="获取一段时间内每天的时间字符串"><a href="#获取一段时间内每天的时间字符串" class="headerlink" title="获取一段时间内每天的时间字符串"></a>获取一段时间内每天的时间字符串</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> getDateArray(startStr, endStr) &#123;</span><br><span class="line">    var dateArray = []</span><br><span class="line">    <span class="keyword">function</span> getDate(datestr)&#123;</span><br><span class="line">      var temp = datestr.split(<span class="string">"-"</span>);</span><br><span class="line">      var date = new Date(temp.join(<span class="string">'/'</span>));</span><br><span class="line">      <span class="built_in">return</span> date;</span><br><span class="line">    &#125;</span><br><span class="line">    var startTime = getDate(startStr);</span><br><span class="line">    var endTime = getDate(endStr);</span><br><span class="line">    <span class="keyword">while</span>((endTime.getTime()-startTime.getTime())&gt;=0)&#123;</span><br><span class="line">      var year = startTime.getFullYear();</span><br><span class="line">      var month = startTime.getMonth() +1</span><br><span class="line">      month = month &lt; 10?<span class="string">"0"</span>+month:month;</span><br><span class="line">      var day = startTime.getDate().toString().length==1?<span class="string">"0"</span>+startTime.getDate():startTime.getDate();</span><br><span class="line">      startTime.setDate(startTime.getDate()+1);</span><br><span class="line">      dateArray.push(year+<span class="string">"-"</span>+month+<span class="string">"-"</span>+day)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> dateArray</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getDateArray(<span class="string">'2019/09/10'</span>,<span class="string">'2019/09/19'</span>)</span><br><span class="line">getDateArray(<span class="string">'2019-09-10'</span>,<span class="string">'2019-09-19'</span>)</span><br><span class="line">getDateArray(<span class="string">'2019-09'</span>,<span class="string">'2020-10'</span>)</span><br><span class="line">getDateArray(<span class="string">'2019'</span>,<span class="string">'2020'</span>)</span><br></pre></td></tr></table></figure><h2 id="遗留问题"><a href="#遗留问题" class="headerlink" title="遗留问题"></a>遗留问题</h2><p>想通过a标签的css伪类实现点击过的链接变成指定样式，刷新之后恢复正常，参考样式百度的搜索页面。<br>后来发现好像实现不了，就在vue中保存在store里。<br>留坑</p><h2 id="tab"><a href="#tab" class="headerlink" title="tab"></a>tab</h2><p>tab这种东西在刚写jq的时候已经写栏了吧<br>这个实在一个非洲的项目中又重写的一个，因为怕vue太重，我们国内现在网络状态已经没有机会用了。</p><blockquote><p><a href="https://codepen.io/allendong0310/pen/JjjEZJx" target="_blank" rel="noopener">https://codepen.io/allendong0310/pen/JjjEZJx</a></p></blockquote><h2 id="前端查询（vue）"><a href="#前端查询（vue）" class="headerlink" title="前端查询（vue）"></a>前端查询（vue）</h2><blockquote><p><a href="https://codepen.io/allendong0310/pen/yLLgRWq" target="_blank" rel="noopener">https://codepen.io/allendong0310/pen/yLLgRWq</a></p></blockquote><h2 id="一个ajax请求方法（待测试）"><a href="#一个ajax请求方法（待测试）" class="headerlink" title="一个ajax请求方法（待测试）"></a>一个ajax请求方法（待测试）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">*参数说明：</span><br><span class="line">*opts: &#123;<span class="string">'可选参数'</span>&#125;</span><br><span class="line">**method: 请求方式:GET/POST,默认值:<span class="string">'GET'</span>;</span><br><span class="line">**url:    发送请求的地址, 默认值: 当前页地址;</span><br><span class="line">**data: string,json;</span><br><span class="line">**async: 是否异步:<span class="literal">true</span>/<span class="literal">false</span>,默认值:<span class="literal">true</span>;</span><br><span class="line">**cache: 是否缓存：<span class="literal">true</span>/<span class="literal">false</span>,默认值:<span class="literal">true</span>;</span><br><span class="line"> **contentType: HTTP头信息，默认值：<span class="string">'application/x-www-form-urlencoded'</span>;</span><br><span class="line">   **success: 请求成功后的回调函数;</span><br><span class="line">   **error: 请求失败后的回调函数;</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> ajax(opts)&#123;</span><br><span class="line">//一.设置默认参数</span><br><span class="line">var defaults = &#123;    </span><br><span class="line">method: <span class="string">'GET'</span>,</span><br><span class="line">url: <span class="string">''</span>,</span><br><span class="line">data: <span class="string">''</span>,        </span><br><span class="line">async: <span class="literal">true</span>,</span><br><span class="line">cache: <span class="literal">true</span>,</span><br><span class="line">contentType: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">success: <span class="function"><span class="title">function</span></span> ()&#123;&#125;,</span><br><span class="line">error: <span class="function"><span class="title">function</span></span> ()&#123;&#125;</span><br><span class="line">&#125;;    </span><br><span class="line"></span><br><span class="line">//二.用户参数覆盖默认参数    </span><br><span class="line"><span class="keyword">for</span>(var key <span class="keyword">in</span> opts)&#123;</span><br><span class="line">defaults[key] = opts[key];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//三.对数据进行处理</span><br><span class="line"><span class="keyword">if</span>(typeof defaults.data === <span class="string">'object'</span>)&#123;    //处理 data</span><br><span class="line">var str = <span class="string">''</span>;</span><br><span class="line">var value = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">for</span>(var key <span class="keyword">in</span> defaults.data)&#123;</span><br><span class="line">value = defaults.data[key];</span><br><span class="line"><span class="keyword">if</span>( defaults.data[key].indexOf(<span class="string">'&amp;'</span>) !== -1 ) value = defaults.data[key].replace(/&amp;/g, escape(<span class="string">'&amp;'</span>));   //对参数中有&amp;进行兼容处理</span><br><span class="line"><span class="keyword">if</span>( key.indexOf(<span class="string">'&amp;'</span>) !== -1 )  key = key.replace(/&amp;/g, escape(<span class="string">'&amp;'</span>));   //对参数中有&amp;进行兼容处理</span><br><span class="line">str += key + <span class="string">'='</span> + value + <span class="string">'&amp;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">defaults.data = str.substring(0, str.length - 1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">defaults.method = defaults.method.toUpperCase();    //处理 method</span><br><span class="line"></span><br><span class="line">defaults.cache = defaults.cache ? <span class="string">''</span> : <span class="string">'&amp;'</span> + new Date().getTime() ;//处理 cache</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(defaults.method === <span class="string">'GET'</span> &amp;&amp; (defaults.data || defaults.cache))    defaults.url += <span class="string">'?'</span> + defaults.data + defaults.cache;    //处理 url    </span><br><span class="line"></span><br><span class="line">//四.开始编写ajax</span><br><span class="line">//1.创建ajax对象</span><br><span class="line">var oXhr = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(<span class="string">'Microsoft.XMLHTTP'</span>);</span><br><span class="line">//2.和服务器建立联系，告诉服务器你要取什么文件</span><br><span class="line">oXhr.open(defaults.method, defaults.url, defaults.async);</span><br><span class="line">//3.发送请求</span><br><span class="line"><span class="keyword">if</span>(defaults.method === <span class="string">'GET'</span>)    </span><br><span class="line">oXhr.send(null);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">oXhr.setRequestHeader(<span class="string">"Content-type"</span>, defaults.contentType);</span><br><span class="line">oXhr.send(defaults.data);</span><br><span class="line">&#125;    </span><br><span class="line">//4.等待服务器回应</span><br><span class="line">oXhr.onreadystatechange = <span class="function"><span class="title">function</span></span> ()&#123;</span><br><span class="line"><span class="keyword">if</span>(oXhr.readyState === 4)&#123;</span><br><span class="line"><span class="keyword">if</span>(oXhr.status === 200)</span><br><span class="line">defaults.success.call(oXhr, oXhr.responseText);</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">defaults.error();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="监听函数-addEventListener"><a href="#监听函数-addEventListener" class="headerlink" title="监听函数(addEventListener)"></a>监听函数(addEventListener)</h2><blockquote><p><a href="https://codepen.io/allendong0310/pen/oNNBQgX" target="_blank" rel="noopener">https://codepen.io/allendong0310/pen/oNNBQgX</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;限制输入框只显示整数&quot;&gt;&lt;a href=&quot;#限制输入框只显示整数&quot; class=&quot;headerlink&quot; title=&quot;限制输入框只显示整数&quot;&gt;&lt;/a&gt;限制输入框只显示整数&lt;/h2&gt;&lt;p&gt;尝试过很多的办法，最好用的正则的办法，虽然html5现在已经提供一些方法，但
      
    
    </summary>
    
      <category term="web" scheme="http://uncle.kim/uncleKim/categories/web/"/>
    
    
      <category term="work" scheme="http://uncle.kim/uncleKim/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>css 阴影的奇技淫巧</title>
    <link href="http://uncle.kim/uncleKim/2019/10/15/cssShadow/"/>
    <id>http://uncle.kim/uncleKim/2019/10/15/cssShadow/</id>
    <published>2019-10-15T03:40:29.509Z</published>
    <updated>2019-10-21T06:41:15.163Z</updated>
    
    <content type="html"><![CDATA[<p>box-shadow 在前端的 CSS 编写工作想必十分常见。但是 box-shadow 除去它的常规用法，其实还存在许多不为人知的奇技淫巧。</p><h2 id="box-shadow-常规用法"><a href="#box-shadow-常规用法" class="headerlink" title="box-shadow 常规用法"></a>box-shadow 常规用法</h2><h3 id="基础属性语法"><a href="#基础属性语法" class="headerlink" title="基础属性语法"></a>基础属性语法</h3><p><code>box-shadow</code> 属性向框添加一个或多个阴影。<br><strong> box-shadow: h-shadow v-shadow blur spread color inset; </strong><br>像这样 <code>box-shadow: 10px 10px 5px #888888;</code> 除此之外，我们要知道，box-shadow 是分外 shadow 和内 shadow 的，内阴影即是在属性上添加 inset 。</p><p>我们再看看 box-shadow 有什么其它妙用。</p><h3 id="box-shadow-模拟多边框"><a href="#box-shadow-模拟多边框" class="headerlink" title="box-shadow 模拟多边框"></a>box-shadow 模拟多边框</h3><p>通常而言，我们会给许多元素添加边框 <code>border</code>，但是当如果需要多重边框，这个时候，由于 <code>border</code> 单重的限制，box-shadow 就可以闪亮登场了。我们可以轻松的使用外阴影或者内阴影来模拟边框效果。</p><div style="margin: 50px auto;width: 200px;height: 100px;background: deeppink;box-shadow: inset 0 0 0 6px #fff,0 0 0 10px #333, 0 0 0 15px #aaa, 0 2px 5px 15px #666;"></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">div &#123;</span><br><span class="line">  margin: 50px auto;</span><br><span class="line">  width: 200px;</span><br><span class="line">  height: 100px;</span><br><span class="line">  background: deeppink;</span><br><span class="line">  box-shadow: </span><br><span class="line">    inset 0 0 0 6px <span class="comment">#fff,</span></span><br><span class="line">    0 0 0 10px <span class="comment">#333, </span></span><br><span class="line">    0 0 0 15px <span class="comment">#aaa, </span></span><br><span class="line">    0 2px 5px 15px <span class="comment">#666;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到，由内至外，这里利用 box-shadow ，设置了白色、黑色、灰色三层边框及最外层带模糊的阴影。</p><p>box-shadow 有一个参数是设置 blur 的，即是模糊的距离，在上面的例子中，即是第二重阴影 0 0 0 10px #333, 中的第三个 0 ，当 blur 的值为 0 ，那么阴影本身是不会模糊的，那么就很容易模拟出边框的效果。</p><p>而且，元素可以设置多重阴影，并且它们存在层叠关系，离 box-shadow 最近设置的层叠优先级最高，依次递减，这个对照代码很好理解。</p><p>当然，值得注意的是：</p><ul><li><p>阴影并不是边框，它们并不占有实际的空间，也不能归属于 <code>box-sizing</code> 的范围。不过，你可以通过使用内边距或外边距（取决于阴影是内部的还是外部的）占据额外的空间来模拟。</p></li><li><p>上述示例模拟的边框是位于元素外部的。它不能捕获类似悬停和点击的鼠标事件。如果事件很重要，那么可以通过添加 inset 关键字让阴影出现在元素的内部。注意，你可能需要添加额外的内边距来扩充空间。</p></li></ul><h3 id="box-shadow-模拟半透明遮罩层"><a href="#box-shadow-模拟半透明遮罩层" class="headerlink" title="box-shadow 模拟半透明遮罩层"></a>box-shadow 模拟半透明遮罩层</h3><p>很多时候，我们需要用到类似下图这样的遮罩层，通过半透明遮罩层把背景调暗，凸显某些 UI 组件，提升用户体验。<br><img src="/uncleKim/images/cssBoxShadow.png" alt="blockchain"></p><p>常规的做法通常都会用到一个额外的元素，用作遮罩层，至少也是一个伪元素， before 或者 after。<br>不考虑低版本的兼容性的话，其实用 box-shadow 也可以模拟遮罩层这种效果。</p><div style="width:200px;line-height:200px;text-align:center;background:#fff;margin:50px auto;box-shadow: 0 0 0 50px rgba(0, 0, 0, .5);">box-shadow模拟遮罩层</div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"bg"</span>&gt;我是背景我是背景我是背景我是背景我是背景我是背景&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"foo"</span>&gt;box-shadow模拟遮罩层&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#foo&#123;</span></span><br><span class="line">  width:200px;</span><br><span class="line">  line-height:200px;</span><br><span class="line">  text-align:center;</span><br><span class="line">  background:<span class="comment">#fff;</span></span><br><span class="line">  margin:50px auto;</span><br><span class="line">  box-shadow: 0 0 0 1920px rgba(0, 0, 0, .5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，值得注意的是：</p><ul><li><p>使用这种方法不可避免的需要考虑兼容性，IE9+、Firefox、Chrome、Opera 以及 Safari 5.1.1 支持 box-shadow 属性。</p></li><li><p>由于每个人的浏览器视口大小不一致，为了所有情况下 box-shadow 生成的阴影都能覆盖整个页面，可能需要将阴影的尺寸 spread 设置的很大。</p></li><li><p>如果你真的想尝试这个方法，box-shadow 从性能角度而言属于 耗性能样式，不同样式在消耗性能方面是不同的，box-shadow 从渲染角度来讲十分耗性能，原因就是与其他样式相比，它们的绘制代码执行时间过长。虽然有 GPU 的 3D 加速，但是具体使用的时候还是值得斟酌考虑。不过你要知道，没有不变的事情，在今天性能很差的样式，可能明天就被优化，并且浏览器之间也存在差异。</p></li></ul><h3 id="多重-box-shadow-之简单图形"><a href="#多重-box-shadow-之简单图形" class="headerlink" title="多重 box-shadow 之简单图形"></a>多重 box-shadow 之简单图形</h3><p>从本质上讲，box-shadow 是将自身投影到另一个地方，在很多情况下，我们是可以利用 box-shadow 来复制自身的！<br>我们来实现一个云朵的图形<br>其中的云层，就是利用了 多重box-shaodw 在一个伪元素内生成的。</p><div style="width:100px;height:100px;margin:50px auto;background:deeppink;border-radius:50%;box-shadow:120px 0px 0 -10px #795548,95px 20px 0 0px #607D8B,30px 30px 0 -10px green,90px -20px 0 0px #FFC107,40px -40px 0 0px #2196F3;display：inline-block"></div><div style="width:100px;height:100px;margin:50px auto;background:#999;border-radius:50%;box-shadow:120px 0px 0 -10px #999,95px 20px 0 0px #999,30px 30px 0 -10px #999,90px -20px 0 0px #999,40px -40px 0 0px #999;display：inline-block;margin-left:200px"></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">div&#123;</span><br><span class="line">  width:100px;</span><br><span class="line">  height:100px;</span><br><span class="line">  margin:50px auto;</span><br><span class="line">  background:deeppink;</span><br><span class="line">  border-radius:50%;</span><br><span class="line">  box-shadow:</span><br><span class="line">    120px 0px 0 -10px <span class="comment">#795548,</span></span><br><span class="line">    95px 20px 0 0px <span class="comment">#607D8B,</span></span><br><span class="line">    30px 30px 0 -10px green,</span><br><span class="line">    90px -20px 0 0px <span class="comment">#FFC107,</span></span><br><span class="line">    40px -40px 0 0px <span class="comment">#2196F3;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多重-box-shadow-实现立体感"><a href="#多重-box-shadow-实现立体感" class="headerlink" title="多重 box-shadow 实现立体感"></a>多重 box-shadow 实现立体感</h3><p>这种方法运用在 text-shadow 上同样可以，可以实现文字的立体感。</p><p>运用多重 box-shadow ，不断偏移 1px ，就可以产生十分立体的感觉。</p><div style="width:200px;line-height:68px;text-align:center;font-size:16px;margin:50px auto;color:#fff;background:hsl(0, 0%, 60%);cursor:pointer;box-shadow:1px 1px 0 0 hsl(0, 0%, 65%),2px 2px 0 0 hsl(0, 0%, 70%),3px 3px 0 0 hsl(0, 0%, 75%),4px 4px 0 0 hsl(0, 0%, 80%),5px 5px 0 0 hsl(0, 0%, 85%);"> 立体按钮 </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt; 立体按钮 &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">div&#123;</span><br><span class="line">  width:200px;</span><br><span class="line">  line-height:68px;</span><br><span class="line">  text-align:center;</span><br><span class="line">  font-size:16px;</span><br><span class="line">  margin:50px auto;</span><br><span class="line">  color:<span class="comment">#fff;</span></span><br><span class="line">  background:hsl(0, 0%, 60%);</span><br><span class="line">  cursor:pointer;</span><br><span class="line">  box-shadow:</span><br><span class="line">    1px 1px 0 0 hsl(0, 0%, 65%),</span><br><span class="line">    2px 2px 0 0 hsl(0, 0%, 70%),</span><br><span class="line">    3px 3px 0 0 hsl(0, 0%, 75%),</span><br><span class="line">    4px 4px 0 0 hsl(0, 0%, 80%),</span><br><span class="line">    5px 5px 0 0 hsl(0, 0%, 85%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div style="width:200px;line-height:68px;text-align:center;font-size:48px;margin:50px auto;color:hsl(0, 0%, 60%);text-shadow:1px 1px 0 hsl(0, 0%, 65%),2px 2px 0 hsl(0, 0%, 70%),3px 3px 0 hsl(0, 0%, 75%),4px 4px 0 hsl(0, 0%, 80%),5px 5px 0 hsl(0, 0%, 85%);">Shadow</div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;Shadow&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">div&#123;</span><br><span class="line">  width:200px;</span><br><span class="line">  line-height:68px;</span><br><span class="line">  text-align:center;</span><br><span class="line">  font-size:48px;</span><br><span class="line">  margin:50px auto;</span><br><span class="line">  color:hsl(0, 0%, 60%);</span><br><span class="line">  text-shadow:</span><br><span class="line">    1px 1px 0 hsl(0, 0%, 65%),</span><br><span class="line">    2px 2px 0 hsl(0, 0%, 70%),</span><br><span class="line">    3px 3px 0 hsl(0, 0%, 75%),</span><br><span class="line">    4px 4px 0 hsl(0, 0%, 80%),</span><br><span class="line">    5px 5px 0 hsl(0, 0%, 85%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>box-shadow效果的本质实际上是对自身的复制</em></p><h2 id="filter-drop-shadow"><a href="#filter-drop-shadow" class="headerlink" title="filter:drop-shadow"></a>filter:drop-shadow</h2><p>其实说到 box-shadow，就不得不提到另一个和它极为相似的 CSS3 新属性 filter:drop-shadow，filter 即是 CSS 滤镜，可以在元素呈现之前，为元素的渲染提供一些效果，如模糊、颜色转移之类的。滤镜常用于调整图像、背景、边框的渲染。</p><p>当然这里我们只说 filter:drop-shadow。</p><h3 id="与box-shadow比较"><a href="#与box-shadow比较" class="headerlink" title="与box-shadow比较"></a>与box-shadow比较</h3><h4 id="兼容性比较"><a href="#兼容性比较" class="headerlink" title="兼容性比较"></a>兼容性比较</h4><p>CSS3 box-shadow从IE9浏览器开始就支持了，兼容性如下截图：<br><img src="/uncleKim/images/boxShadow.png" alt="blockchain"></p><p>而filter中的drop-shadowIE13才开始支持，移动端Android4.4才开始支持，细想一下，其实离在移动端愉快使用就差一口气。<br>兼容性如下图：<br><img src="/uncleKim/images/css3Filter.png" alt="blockchain"></p><h4 id="同样的参数值，表现效果有差异"><a href="#同样的参数值，表现效果有差异" class="headerlink" title="同样的参数值，表现效果有差异"></a>同样的参数值，表现效果有差异</h4><p>filter中的drop-shadow语法如下：<br><code>filter: drop-shadow(x偏移, y偏移, 模糊大小, 色值);</code><br>eg:<code>filter:drop-shadow(5px 5px 10px black)</code><br>表示右下5像素偏移，10像素模糊的黑色阴影。<br><code>box-shadow: 5px 5px 10px black;</code><br><em>filter</em><br><img src="/uncleKim/images/test.jpg" width="100px" style="filter:drop-shadow(5px 5px 10px black);border:none"><br><em>box-shadow</em><br><img src="/uncleKim/images/test.jpg" width="100px" style="box-shadow: 5px 5px 10px black;border:0;padding:0"></p><h4 id="drop-shadow没有内阴影效果"><a href="#drop-shadow没有内阴影效果" class="headerlink" title="drop-shadow没有内阴影效果"></a>drop-shadow没有内阴影效果</h4><p>box-shadow支持inset内阴影，如：</p><p><code>box-shadow: inset 5px 5px 10px black;</code><br>但是，drop-shadow却没有。</p><h4 id="drop-shadow不能阴影叠加"><a href="#drop-shadow不能阴影叠加" class="headerlink" title="drop-shadow不能阴影叠加"></a>drop-shadow不能阴影叠加</h4><p>box-shadow有个超屌的特性，就是阴影可以任意累加，因此，理论上我们可以使用box-shadow生成任意的图片。</p><div style="box-shadow: 11px 8px #626262,11px 9px #626262,11px 10px #626262,11px 11px #626262,11px 12px #626262,11px 13px #626262,11px 14px #626262,4px 15px #626262,5px 15px #626262,6px 15px #626262,7px 15px #626262,8px 15px #626262,9px 15px #626262,10px 15px #626262,11px 15px #626262,12px 15px #626262,13px 15px #626262,14px 15px #626262,15px 15px #626262,16px 15px #626262,17px 15px #626262,18px 15px #626262,11px 16px #626262,11px 17px #626262,11px 18px #626262,11px 19px #626262,11px 20px #626262,11px 21px #626262,11px 22px #626262;width:1px;height:1px;"></div><div style="position: absolute; margin: -5px 0 0 9px; height: 4px; border-left: 1px solid #bdbdbd; box-shadow: 1px 1px #bdbdbd, 2px 2px #bdbdbd, 3px 3px #bdbdbd, 4px 4px #bdbdbd, 5px 5px #bdbdbd, -1px 1px #bdbdbd, -2px 2px #bdbdbd, -3px 3px #bdbdbd, -4px 4px #bdbdbd, -5px 5px #bdbdbd;"></div><br><div></div><br>用box-shadow实现的图片<br><br><a href="https://www.zhangxinxu.com/study/201311/box-shadow-convert-to-image.html" target="_blank" rel="noopener">一个牛逼的demo</a><br><br>canvas上下文有个getImageData方法，可以获取画布每一个像素点的颜色信息、透明度信息。于是，利用drawImage将无名小主靓照原封不动迁到画布上，再利用getImageData获得的像素点信息，转换成box-shadow值，然后呈现之。<br><br>理论上，任意的图片，box-shadow都可以呈现。<br><br>但是filter中的drop-shadow就只能抱歉了，我就是一锤子买卖。没钱也这么任性！<br><br>说到现在，体现的尽是drop-shadow的不好，兼容性不够，内阴影不支持，多阴影也不支持。<br><br>真的是这样吗？显然非也！所谓存在既有道理。<br><br>drop-shadow有一个很厉害的特性，也就这一个特性，让其以后有足够的机会大放异彩！那就是，drop-shadow才是真正意义上的投影，而box-shadow只是盒阴影而已。<br><br>什么意思呢？<br><br>#### 阴影 vs 盒阴影<br><br>实践出真知，下面我们用CSS border写一个虚线框，例如：<br><code>border: 10px dashed #beceeb;</code><br>结果长相如下：<br><div style="width:50px; height:50px;border: 10px dashed #beceeb;"></div><p>然后，我们分别应用box-shadow和drop-shadow滤镜：</p><p><code>border: 10px dashed #beceeb; box-shadow: 5px 5px 10px black;</code><br><code>border: 10px dashed #beceeb; filter: drop-shadow(5px 5px 10px black);</code><br>结果：</p><div style="width:50px; height:50px;border: 10px dashed #beceeb; box-shadow: 5px 5px 10px black;"></div><br><div style="width:50px; height:50px;border: 10px dashed #beceeb; filter: drop-shadow(5px 5px 10px black);"></div><p>怎么样？是不是本性暴露了！</p><p>box-shadow顾名思意“盒阴影”，只是盒子的阴影；你想啊，这盒子中间明明是透明的，结果，阴影的时候，居然光线没有穿透；但是drop-shadow就符合真实世界的投影，非透明的颜色，我就有投影；透明部分，光线穿过，没投影，而什么盒子不盒子的，跟我没有任何关系。</p><p>drop-shadow不仅可以穿透代码构建的元素的透明部分，PNG图片的透明部分也是可以穿透的，如下图：</p><p><img src="/uncleKim/images/cactus.png" width="100px" style="filter:drop-shadow(5px 5px 10px black);border:none;border: 1px solid #beceeb;"></p><p>于是，曾经困扰我们的一些老大难的问题就有了很好的解决思路了！</p><h3 id="drop-shadow的实际应用"><a href="#drop-shadow的实际应用" class="headerlink" title="drop-shadow的实际应用"></a>drop-shadow的实际应用</h3><h4 id="带有箭头指向的浮层面板"><a href="#带有箭头指向的浮层面板" class="headerlink" title="带有箭头指向的浮层面板"></a>带有箭头指向的浮层面板</h4><div style="background: #f7f7f7;height: 693px;"><br><div class="box box-shadow" style=" margin: 40px; padding: 50px;background-color: #fff;position: relative;font-size: 24px;box-shadow: 5px 5px 10px black;"><br>    <i class="cor" style="position: absolute;left: -40px;width: 0; height: 0;overflow: hidden;border: 20px solid transparent;border-right-color: #fff;"></i><br>    box-shadow<br></div><br><div class="box drop-shadow" style=" margin: 40px; padding: 50px;background-color: #fff;position: relative;font-size: 24px;filter: drop-shadow(5px 5px 10px black);"><br>    <i class="cor" style="position: absolute;left: -40px;widtd: 0; height: 0;overflow: hidden;border: 20px solid transparent;border-right-color: #fff;"></i><br>    filter: drop-shadow<br></div><br></div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    margin: 40px; padding: 50px;</span><br><span class="line">    background-color: <span class="comment">#fff;</span></span><br><span class="line">    position: relative;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">&#125;</span><br><span class="line">.cor &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: -40px;</span><br><span class="line">    widtd: 0; height: 0;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    border: 20px solid transparent;</span><br><span class="line">    border-right-color: <span class="comment">#fff;</span></span><br><span class="line">&#125;</span><br><span class="line">.box-shadow &#123;</span><br><span class="line">    box-shadow: 5px 5px 10px black;</span><br><span class="line">&#125;</span><br><span class="line">.drop-shadow &#123;</span><br><span class="line">    filter: drop-shadow(5px 5px 10px black);</span><br><span class="line">&#125;</span><br><span class="line">HTML代码：</span><br><span class="line">&lt;div class=<span class="string">"box box-shadow"</span>&gt;</span><br><span class="line">    &lt;i class=<span class="string">"cor"</span>&gt;&lt;/i&gt;</span><br><span class="line">    box-shadow</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div class=<span class="string">"box drop-shadow"</span>&gt;</span><br><span class="line">    &lt;i class=<span class="string">"cor"</span>&gt;&lt;/i&gt;</span><br><span class="line">    filter: drop-shadow</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="PNG格式小图标"><a href="#PNG格式小图标" class="headerlink" title="PNG格式小图标"></a>PNG格式小图标</h4><p><i class="icon" style="display: inline-block;width: 20px; height: 20px;overflow: hidden;"><i class="icon icon-del" style="position: relative;left: -20px;border-right: 20px solid transparent;-webkit-filter: drop-shadow(rgb(51, 204, 0) 20px 0);filter: drop-shadow(rgb(51, 204, 0) 20px 0);background: url(/uncleKim/images/delete.png) no-repeat;"></i></i></p><p>原理其实很简单，使用了CSS3滤镜filter中的drop-shadow，drop-shadow滤镜可以给元素或图片非透明区域添加投影。</p><p>在Chrome浏览器下，drop-shadow有一个如下的呈现特性：</p><blockquote><p>在Chrome浏览器下，如果一个元素的主体部分，无论以何种方式，只要在页面中不可见，其drop-shadow是不可见的；实体部分哪怕有1像素可见，则drop-shadow完全可见。</p></blockquote><h2 id="各种各样的阴影"><a href="#各种各样的阴影" class="headerlink" title="各种各样的阴影"></a>各种各样的阴影</h2><h3 id="单侧阴影"><a href="#单侧阴影" class="headerlink" title="单侧阴影"></a>单侧阴影</h3><p>先说单侧投影，关于 box-shadow，大部分时候，我们使用它都是用来生成一个两侧的投影，或者一个四侧的投影。如下：<br><img src="/uncleKim/images/dancetouying.png" alt="blockchain"><br>OK，那如果要生成一个单侧的投影呢？</p><p>我们来看看 box-shadow 的用法定义：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    box-shadow: none | [inset? &amp;&amp; [ &lt;offset-x&gt; &lt;offset-y&gt; &lt;blur-radius&gt;? &lt;spread-radius&gt;? &lt;color&gt;? ] ]<span class="comment">#</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>以 box-shadow: 1px 2px 3px 4px #333 为例，4 个数值的含义分别是，x 方向偏移值、y 方向偏移值 、模糊半径、扩张半径。</p><p>这里有一个小技巧，扩张半径可以为负值。</p><p>继续，如果阴影的模糊半径，与负的扩张半径一致，那么我们将看不到任何阴影，因为生成的阴影将被包含在原来的元素之下，除非给它设定一个方向的偏移量。所以这个时候，我们给定一个方向的偏移值，即可实现单侧投影：<br><img src="/uncleKim/images/danceyinying2.png" alt="blockchain"></p><h3 id="投影背景-背景动画"><a href="#投影背景-背景动画" class="headerlink" title="投影背景 / 背景动画"></a>投影背景 / 背景动画</h3><p>很明显，0 = -0，所以当 box-shadow 的模糊半径和扩张半径都为 0 的时候，我们也可以得到一个和元素大小一样的阴影，只不过被元素本身遮挡住了，我们尝试将其偏移出来。<br>CSS代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">div &#123;</span><br><span class="line">    width: 80px;</span><br><span class="line">    height: 80px;</span><br><span class="line">    border: 1px solid #333;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    box-shadow: 80px 80px 0 0 #000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到如下结果：</p><p><div style="width: 80px;height: 80px;border: 1px solid #333;box-sizing: border-box;box-shadow: 80px 80px 0 0 #000;"></div></p><p><div style="height:80px;"></div><br>有什么用呢？好像没什么意义啊。</p><p>额，确实好像没什么用。不过我们注意到，box-shadow 是可以设置多层的，也就是多层阴影，而且可以进行过渡变换动画（补间动画）。但是 background-image: linear-gradient()，也就是渐变背景是不能进行补间动画的。</p><p><img src="/uncleKim/images/jinbian.png" alt="blockchain"><br>用 box-shadow，实现它的 CSS 代码如下（可以更简化）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.shadow &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: 250px;</span><br><span class="line">    height: 250px;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">.shadow::before &#123;</span><br><span class="line">    content: &quot;&quot;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 50px;</span><br><span class="line">    height: 50px;</span><br><span class="line">    top: -50px;</span><br><span class="line">    left: -50px;</span><br><span class="line">    box-shadow:</span><br><span class="line">        50px 50px #000, 150px 50px #000, 250px 50px #000,</span><br><span class="line">        50px 100px #000, 150px 100px #000, 250px 100px #000,</span><br><span class="line">        50px 150px #000, 150px 150px #000, 250px 150px #000,</span><br><span class="line">        50px 200px #000, 150px 200px #000, 250px 200px #000,</span><br><span class="line">        50px 250px #000, 150px 250px #000, 250px 250px #000;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>用渐变来实现的话，只需要这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.gradient &#123;</span><br><span class="line">    width: 250px;</span><br><span class="line">    height: 250px;</span><br><span class="line">    background-image: linear-gradient(90deg, #000 0%, #000 50%, #fff 50%, #fff 100%);</span><br><span class="line">    background-size:  100px 100px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><a href="https://codepen.io/Chokcoco/pen/WaBYZL" target="_blank" rel="noopener">CodePen Demo – box-shadow实现背景动画</a><br><a href="https://codepen.io/davidkpiano/pen/LVzxPV" target="_blank" rel="noopener">CodePen Demo – CSS Checker Illusion( By David Khourshid )</a></p><p>嗯，很有意思，就是实际用途可能不大。</p><h3 id="立体投影"><a href="#立体投影" class="headerlink" title="立体投影"></a>立体投影</h3><p><a href="https://codepen.io/Chokcoco/pen/LgdRKE?editors=1100" target="_blank" rel="noopener">CodePen Demo – 立体投影</a></p><p>所以总结一下：</p><p>立体投影的关键点在于利于伪元素生成一个大小与父元素相近的元素，然后对其进行 rotate 以及定位到合适位置，再赋于阴影操作<br>颜色的运用也很重要，阴影的颜色通常比本身颜色要更深，这里使用 hsl 表示颜色更容易操作，l 控制颜色的明暗度<br>还有其他很多场景：</p><h3 id="文字立体投影-文字长阴影"><a href="#文字立体投影-文字长阴影" class="headerlink" title="文字立体投影 / 文字长阴影"></a>文字立体投影 / 文字长阴影</h3><p><a href="https://codepen.io/Chokcoco/pen/JmgNNa" target="_blank" rel="noopener">CodePen Demo – 立体文字阴影</a><br><a href="https://codepen.io/Chokcoco/pen/XxQJEB?editors=1100" target="_blank" rel="noopener">线性渐变配合阴影实现条纹立体阴影条纹字</a></p><h3 id="使用-box-shadow-实现的灯光效果"><a href="#使用-box-shadow-实现的灯光效果" class="headerlink" title="使用 box-shadow 实现的灯光效果"></a>使用 box-shadow 实现的灯光效果</h3><p><a href="https://codepen.io/Chokcoco/pen/WaLdwX" target="_blank" rel="noopener">CodePen Demo – box-shadow实现霓虹氖灯文字效果</a></p><p><a href="https://codepen.io/Chokcoco/pen/ReOgvq" target="_blank" rel="noopener">CodePen Demo – 使用box-shadow实现阴影灯光show</a></p><p>引用：</p><blockquote><p><a href="https://www.cnblogs.com/coco1s" target="_blank" rel="noopener">https://www.cnblogs.com/coco1s</a><br><a href="https://www.zhangxinxu.com/" target="_blank" rel="noopener">https://www.zhangxinxu.com/</a><br>公众号：前端早读课</p></blockquote><!-- 推荐：>http://www.ruanyifeng.com/blog/>https://www.liaoxuefeng.com/>https://github.com/chokcoco/CSS-Inspiration>https://vuepress.vuejs.org/zh/>http://mi-dev.shalltry.com:90/ssp-docs/zh/sdk/>https://hexo.io/zh-cn/>http://zhangwenli.com/ -->]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;box-shadow 在前端的 CSS 编写工作想必十分常见。但是 box-shadow 除去它的常规用法，其实还存在许多不为人知的奇技淫巧。&lt;/p&gt;
&lt;h2 id=&quot;box-shadow-常规用法&quot;&gt;&lt;a href=&quot;#box-shadow-常规用法&quot; class=&quot;he
      
    
    </summary>
    
      <category term="web" scheme="http://uncle.kim/uncleKim/categories/web/"/>
    
    
      <category term="css" scheme="http://uncle.kim/uncleKim/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>markdown的一些了解和简单语法</title>
    <link href="http://uncle.kim/uncleKim/2018/09/03/markdown/"/>
    <id>http://uncle.kim/uncleKim/2018/09/03/markdown/</id>
    <published>2018-09-03T09:56:48.000Z</published>
    <updated>2019-10-15T06:33:57.604Z</updated>
    
    <content type="html"><![CDATA[<p>自从前两天开始倒腾这个hexo的博客，简单写了一篇博客，就是我的第一篇博文，完全没有排版和格式，今天抽空来了解一下这个markdown，因为hexo官方建议为markdown标记语言，所以就了解一下，其实完全应该是可以用html来替代的。</p><h2 id="一-定义"><a href="#一-定义" class="headerlink" title="一.定义"></a>一.定义</h2><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p><h2 id="二-用途"><a href="#二-用途" class="headerlink" title="二.用途"></a>二.用途</h2><p>Markdown的语法简洁明了、学习容易，而且功能比纯文本更强，因此有很多人用它写博客。世界上最流行的博客平台WordPress和大型CMS如Joomla、Drupal都能很好的支持Markdown。完全采用Markdown编辑器的博客平台有Ghost和Typecho。<br>用于编写说明文档，并且以“README.MD”的文件名保存在软件的目录下面。<br>应该说大部分编辑器都是支持MarkDown模式的，我刚看了一下我正在用的sublime也是ok的，使用的话应该还是了解一下快捷键。</p><h2 id="三-语法"><a href="#三-语法" class="headerlink" title="三.语法"></a>三.语法</h2><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h3><p>标题这个应该是和h1~h6是一样的</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一级标题</span></span><br><span class="line"><span class="comment">## 二级标题</span></span><br><span class="line"><span class="comment">### 三级标题</span></span><br><span class="line"><span class="comment">#### 四级标题</span></span><br><span class="line"><span class="comment">##### 五级标题</span></span><br><span class="line"><span class="comment">###### 六级标题</span></span><br></pre></td></tr></table></figure><h3 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h3><p><strong>加粗</strong><br><em>倾斜</em><br><strong><em>倾斜+加粗</em></strong><br><del>删除线</del><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**加粗**</span><br><span class="line">*倾斜*</span><br><span class="line">***倾斜+加粗***</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure></p><h3 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h3><blockquote><p>引用的内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用的内容</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4.分割线"></a>4.分割线</h3><hr><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">***</span><br></pre></td></tr></table></figure><h3 id="5-图片"><a href="#5-图片" class="headerlink" title="5.图片"></a>5.图片</h3><p>以test.jpg为例，在blog/source目录下新建一个文件夹，如images，将该图片放入此文件夹中。写作的时候使用的图片链接地址为/images/test.jpg<br><img src="/uncleKim/images/test.jpg" alt="blockchain"></p><p>###列表<br>-无序列表（-+*）<br>1.有序列表（1.）</p><h2 id="写不下去了-有空来补"><a href="#写不下去了-有空来补" class="headerlink" title="写不下去了 有空来补"></a>写不下去了 有空来补</h2><p></p><h3>测试html h3使用<h3><br>(注：html无缝衔接 以后就用html了 毕竟顺手)<p></p></h3></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自从前两天开始倒腾这个hexo的博客，简单写了一篇博客，就是我的第一篇博文，完全没有排版和格式，今天抽空来了解一下这个markdown，因为hexo官方建议为markdown标记语言，所以就了解一下，其实完全应该是可以用html来替代的。&lt;/p&gt;
&lt;h2 id=&quot;一-定义&quot;
      
    
    </summary>
    
      <category term="hohoho" scheme="http://uncle.kim/uncleKim/categories/hohoho/"/>
    
    
      <category term="tools" scheme="http://uncle.kim/uncleKim/tags/tools/"/>
    
  </entry>
  
</feed>
